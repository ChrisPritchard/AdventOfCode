#ip 5
0:  addi 5 16 5 // GOTO 17 (line 19) (pc 16 + 1)

1:  seti 1 3 1  // reg 1 = 1
2:  seti 1 1 2  // reg 2 = 1
3:  mulr 1 2 4  // reg 4 = reg 1 * reg 2 (1?)
4:  eqrr 4 3 4  // if reg 4 = reg 3 then reg 4 = 1 else 0
5:  addr 4 5 5  // if reg 4 = 1 then GOTO 7 (9)
6:  addi 5 1 5  // JUMP 2
7:  addr 1 0 0  // add reg 1 to reg 0
8:  addi 2 1 2  // add 1 to reg 2
9:  gtrr 2 3 4  // reg 4 = 1 if reg 2 > reg 3 else 0
10: addr 5 4 5  // if reg 4 = 1 then GOTO 12 (14)
11: seti 2 4 5  // GOTO 3 (2 + 1)
12: addi 1 1 1  // reg 1 = reg 1 + 1
13: gtrr 1 3 4  // if reg 1 > reg 3 then 4 = 1 else 0
14: addr 4 5 5  // JUMP 2 if 4 is 1 else go next
15: seti 1 5 5  // GOTO 2 (1 + 1)

16: mulr 5 5 5  // END PROG (16 * 16 > prog len)

17: addi 3 2 3  // reg 3 = reg 3 + 2
18: mulr 3 3 3  // reg 3 = reg 3 * reg 3
19: mulr 5 3 3  // reg 3 = pc (19) * reg 3
20: muli 3 11 3 // reg 3 = reg 3 * 11
21: addi 4 8 4  // reg 4 = reg 4 + 8
22: mulr 4 5 4  // reg 4 = reg 4 * pc (22)
23: addi 4 13 4 // reg 4 = reg 4 + 13
24: addr 3 4 3  // reg 3 = reg 3 + reg 4
25: addr 5 0 5  // pc = pc + reg 0

26: seti 0 8 5  // GOTO 1

27: setr 5 3 4
28: mulr 4 5 4
29: addr 5 4 4
30: mulr 5 4 4
31: muli 4 14 4
32: mulr 4 5 4
33: addr 3 4 3
34: seti 0 8 0
35: seti 0 4 5